{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Maskopy lambda functions",
  "Parameters": {
    "assumeRoleArn": {
      "Description": "The ARN of role to assume to access source resources.",
      "Type": "String",
      "MinLength": 1
    },
    "costCenter": {
      "Description": "The value to use for the cost center tag.",
      "Type": "String"
    },
    "defaultImage": {
      "Description": "The default image used in fargate task.",
      "Type": "String"
    },
    "destinationAccountKeyArn": {
      "Description": "Key used to encrypt RDS resources in destination account.",
      "Type": "String",
      "MinLength": 1
    },
    "destinationAccountId": {
      "Description": "The account id of destination account.",
      "Type": "String",
      "MinLength": 1
    },
    "ecsServiceRole": {
      "Description": "The name of the service role for ecs cluster.",
      "Type": "String",
      "MinLength": 1
    },
    "lambdaRoleName": {
      "Description": "The role name that the lambda will use to run execution.",
      "Type": "String",
      "MinLength": 1
    },
    "lambdaSubnetList": {
      "Description": "The list of subnet ids to be added to lambdas.",
      "Type": "CommaDelimitedList"
    },
    "lambdaSecurityGroupList": {
      "Description": "The list of security groups to be added to lambdas.",
      "Type": "CommaDelimitedList"
    },
    "masterAccessKeyArn": {
      "Description": "Key used to encrypt shared snapshot.",
      "Type": "String",
      "MinLength": 1
    },
    "rdsSecurityGroupList": {
      "Description": "The list of security groups to be added to RDS instance.",
      "Type": "CommaDelimitedList"
    },
    "rdsSubnetGroupName": {
      "Description": "The subnet group to be added to RDS instance.",
      "Type": "String",
      "MinLength": 1
    },
    "s3Bucket": {
      "Description": "The S3 bucket where lambda code is stored.",
      "Type": "String",
      "MinLength": 1
    },
    "s3Prefix": {
      "Description": "The S3 folder where lambda code is stored.",
      "Type": "String",
      "MinLength": 1
    }
  },
  "Resources": {
    "lambda0LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "s3Bucket"},
          "S3Key": {
            "Fn::Join": [
              "",
              [
                { "Ref": "s3Prefix" },
                "/00-AuthorizeUser.zip"
              ]
            ]
          }
        },
        "FunctionName": "MASKOPY-00-AuthorizeUser",
        "Description" : "MASKOPY-00-AuthorizeUser",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/",
              { "Ref": "lambdaRoleName" }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "ApplicationName",
            "Value": "MASKOPY"
          },
          {
            "Key": "Cost Center",
            "Value": { "Ref": "costCenter" }
          }
        ],
        "MemorySize": 1024,
        "Timeout": 25,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": { "Ref": "lambdaSecurityGroupList"},
          "SubnetIds": { "Ref": "lambdaSubnetList" }
        },
        "Environment": {
          "Variables" : {
            "assume_role_arn": { "Ref": "assumeRoleArn" }
          }
        }
      }
    },
    "lambda1LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "s3Bucket"},
          "S3Key": {
            "Fn::Join": [
              "",
              [
                { "Ref": "s3Prefix" },
                "/01-UseExistingSnapshot.zip"
              ]
            ]
          }
        },
        "FunctionName": "MASKOPY-01-UseExistingSnapshot",
        "Description" : "MASKOPY-01-UseExistingSnapshot",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/",
              { "Ref": "lambdaRoleName" }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "ApplicationName",
            "Value": "MASKOPY"
          },
          {
            "Key": "Cost Center",
            "Value": { "Ref": "costCenter" }
          }
        ],
        "MemorySize": 1024,
        "Timeout": 25,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": { "Ref": "lambdaSecurityGroupList"},
          "SubnetIds": { "Ref": "lambdaSubnetList" }
        },
        "Environment": {
          "Variables" : {
            "assume_role_arn": { "Ref": "assumeRoleArn" },
            "custom_kms_key": { "Ref": "masterAccessKeyArn" }
          }
        }
      }
    },
    "lambda2LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "s3Bucket"},
          "S3Key": {
            "Fn::Join": [
              "",
              [
                { "Ref": "s3Prefix" },
                "/02-CheckForSnapshotCompletion.zip"
              ]
            ]
          }
        },
        "FunctionName": "MASKOPY-02-CheckForSnapshotCompletion",
        "Description" : "MASKOPY-02-CheckForSnapshotCompletion",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/",
              { "Ref": "lambdaRoleName" }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "ApplicationName",
            "Value": "MASKOPY"
          },
          {
            "Key": "Cost Center",
            "Value": { "Ref": "costCenter" }
          }
        ],
        "MemorySize": 1024,
        "Timeout": 25,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": { "Ref": "lambdaSecurityGroupList"},
          "SubnetIds": { "Ref": "lambdaSubnetList" }
        },
        "Environment": {
          "Variables" : {
            "assume_role_arn": { "Ref": "assumeRoleArn" }
          }
        }
      }
    },
    "lambda3LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "s3Bucket"},
          "S3Key": {
            "Fn::Join": [
              "",
              [
                { "Ref": "s3Prefix" },
                "/03-ShareSnapshots.zip"
              ]
            ]
          }
        },
        "FunctionName": "MASKOPY-03-ShareSnapshots",
        "Description" : "MASKOPY-03-ShareSnapshots",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/",
              { "Ref": "lambdaRoleName" }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "ApplicationName",
            "Value": "MASKOPY"
          },
          {
            "Key": "Cost Center",
            "Value": { "Ref": "costCenter" }
          }
        ],
        "MemorySize": 1024,
        "Timeout": 25,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": { "Ref": "lambdaSecurityGroupList"},
          "SubnetIds": { "Ref": "lambdaSubnetList" }
        },
        "Environment": {
          "Variables" : {
            "assume_role_arn": { "Ref": "assumeRoleArn" },
            "accounts_to_share_with": { "Ref": "destinationAccountId" }
          }
        }
      }
    },
    "lambda4LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "s3Bucket"},
          "S3Key": {
            "Fn::Join": [
              "",
              [
                { "Ref": "s3Prefix" },
                "/04-CopySharedDBSnapshots.zip"
              ]
            ]
          }
        },
        "FunctionName": "MASKOPY-04-CopySharedDBSnapshots",
        "Description" : "MASKOPY-04-CopySharedDBSnapshots",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/",
              { "Ref": "lambdaRoleName" }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "ApplicationName",
            "Value": "MASKOPY"
          },
          {
            "Key": "Cost Center",
            "Value": { "Ref": "costCenter" }
          }
        ],
        "MemorySize": 1024,
        "Timeout": 25,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": { "Ref": "lambdaSecurityGroupList"},
          "SubnetIds": { "Ref": "lambdaSubnetList" }
        },
        "Environment": {
          "Variables" : {
            "destination_account_default_kms_key_arn": { "Ref": "destinationAccountKeyArn" }
          }
        }
      }
    },
    "lambda5LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "s3Bucket"},
          "S3Key": {
            "Fn::Join": [
              "",
              [
                { "Ref": "s3Prefix" },
                "/05-CheckForDestinationSnapshotCompletion.zip"
              ]
            ]
          }
        },
        "FunctionName": "MASKOPY-05-CheckForDestinationSnapshotCompletion",
        "Description" : "MASKOPY-05-CheckForDestinationSnapshotCompletion",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/",
              { "Ref": "lambdaRoleName" }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "ApplicationName",
            "Value": "MASKOPY"
          },
          {
            "Key": "Cost Center",
            "Value": { "Ref": "costCenter" }
          }
        ],
        "MemorySize": 1024,
        "Timeout": 25,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": { "Ref": "lambdaSecurityGroupList"},
          "SubnetIds": { "Ref": "lambdaSubnetList" }
        }
      }
    },
    "lambda6LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "s3Bucket"},
          "S3Key": {
            "Fn::Join": [
              "",
              [
                { "Ref": "s3Prefix" },
                "/06-RestoreDatabases.zip"
              ]
            ]
          }
        },
        "FunctionName": "MASKOPY-06-RestoreDatabases",
        "Description" : "MASKOPY-06-RestoreDatabases",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/",
              { "Ref": "lambdaRoleName" }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "ApplicationName",
            "Value": "MASKOPY"
          },
          {
            "Key": "Cost Center",
            "Value": { "Ref": "costCenter" }
          }
        ],
        "MemorySize": 1024,
        "Timeout": 25,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": { "Ref": "lambdaSecurityGroupList"},
          "SubnetIds": { "Ref": "lambdaSubnetList" }
        },
        "Environment": {
          "Variables" : {
            "subnet_group_name": { "Ref": "rdsSubnetGroupName" },
            "security_group": {
              "Fn::Join": [
                "",
                { "Ref": "rdsSecurityGroupList" }
              ]
            }
          }
        }
      }
    },
    "lambda7LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "s3Bucket"},
          "S3Key": {
            "Fn::Join": [
              "",
              [
                { "Ref": "s3Prefix" },
                "/07-CheckForRestoreCompletion.zip"
              ]
            ]
          }
        },
        "FunctionName": "MASKOPY-07-CheckForRestoreCompletion",
        "Description" : "MASKOPY-07-CheckForRestoreCompletion",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/",
              { "Ref": "lambdaRoleName" }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "ApplicationName",
            "Value": "MASKOPY"
          },
          {
            "Key": "Cost Center",
            "Value": { "Ref": "costCenter" }
          }
        ],
        "MemorySize": 1024,
        "Timeout": 25,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": { "Ref": "lambdaSecurityGroupList"},
          "SubnetIds": { "Ref": "lambdaSubnetList" }
        }
      }
    },
    "lambda8aLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "s3Bucket"},
          "S3Key": {
            "Fn::Join": [
              "",
              [
                { "Ref": "s3Prefix" },
                "/08a-CreateFargate.zip"
              ]
            ]
          }
        },
        "FunctionName": "MASKOPY-08a-CreateFargate",
        "Description" : "MASKOPY-08a-CreateFargate",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/",
              { "Ref": "lambdaRoleName" }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "ApplicationName",
            "Value": "MASKOPY"
          },
          {
            "Key": "Cost Center",
            "Value": { "Ref": "costCenter" }
          }
        ],
        "MemorySize": 1024,
        "Timeout": 150,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": { "Ref": "lambdaSecurityGroupList"},
          "SubnetIds": { "Ref": "lambdaSubnetList" }
        },
        "Environment": {
          "Variables" : {
            "account_id": { "Ref": "destinationAccountId"},
            "default_image": { "Ref": "defaultImage"},
            "region": { "Ref": "AWS::Region" },
            "service_role": { "Ref": "ecsServiceRole" }
          }
        }
      }
    },
    "lambda9LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "s3Bucket"},
          "S3Key": {
            "Fn::Join": [
              "",
              [
                { "Ref": "s3Prefix" },
                "/09-TakeSnapshot.zip"
              ]
            ]
          }
        },
        "FunctionName": "MASKOPY-09-TakeSnapshot",
        "Description" : "MASKOPY-09-TakeSnapshot",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/",
              { "Ref": "lambdaRoleName" }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "ApplicationName",
            "Value": "MASKOPY"
          },
          {
            "Key": "Cost Center",
            "Value": { "Ref": "costCenter" }
          }
        ],
        "MemorySize": 1024,
        "Timeout": 25,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": { "Ref": "lambdaSecurityGroupList"},
          "SubnetIds": { "Ref": "lambdaSubnetList" }
        }
      }
    },
    "lambda10LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "s3Bucket"},
          "S3Key": {
            "Fn::Join": [
              "",
              [
                { "Ref": "s3Prefix" },
                "/10-CheckFinalSnapshotAvailability.zip"
              ]
            ]
          }
        },
        "FunctionName": "MASKOPY-10-CheckFinalSnapshotAvailability",
        "Description" : "MASKOPY-10-CheckFinalSnapshotAvailability",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/",
              { "Ref": "lambdaRoleName" }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "ApplicationName",
            "Value": "MASKOPY"
          },
          {
            "Key": "Cost Center",
            "Value": { "Ref": "costCenter" }
          }
        ],
        "MemorySize": 1024,
        "Timeout": 25,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": { "Ref": "lambdaSecurityGroupList"},
          "SubnetIds": { "Ref": "lambdaSubnetList" }
        }
      }
    },
    "lambda11LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "s3Bucket"},
          "S3Key": {
            "Fn::Join": [
              "",
              [
                { "Ref": "s3Prefix" },
                "/11-CleanupAndTagging.zip"
              ]
            ]
          }
        },
        "FunctionName": "MASKOPY-11-CleanupAndTagging",
        "Description" : "MASKOPY-11-CleanupAndTagging",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/",
              { "Ref": "lambdaRoleName" }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "ApplicationName",
            "Value": "MASKOPY"
          },
          {
            "Key": "Cost Center",
            "Value": { "Ref": "costCenter" }
          }
        ],
        "MemorySize": 1024,
        "Timeout": 150,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": { "Ref": "lambdaSecurityGroupList"},
          "SubnetIds": { "Ref": "lambdaSubnetList" }
        },
        "Environment": {
          "Variables" : {
            "assume_role_arn": { "Ref": "assumeRoleArn" }
          }
        }
      }
    },
    "lambda12LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "s3Bucket"},
          "S3Key": {
            "Fn::Join": [
              "",
              [
                { "Ref": "s3Prefix" },
                "/ErrorHandlingAndCleanup.zip"
              ]
            ]
          }
        },
        "FunctionName": "MASKOPY-ErrorHandlingAndCleanup",
        "Description" : "MASKOPY-ErrorHandlingAndCleanup",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              { "Ref": "AWS::AccountId" },
              ":role/",
              { "Ref": "lambdaRoleName" }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "ApplicationName",
            "Value": "MASKOPY"
          },
          {
            "Key": "Cost Center",
            "Value": { "Ref": "costCenter" }
          }
        ],
        "MemorySize": 1024,
        "Timeout": 150,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": { "Ref": "lambdaSecurityGroupList"},
          "SubnetIds": { "Ref": "lambdaSubnetList" }
        },
        "Environment": {
          "Variables" : {
            "assume_role_arn": { "Ref": "assumeRoleArn" }
          }
        }
      }
    }
  }
}